<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>52hertz</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-07T09:05:50.671Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>52hertz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将 Hexo 个人博客同时部署到 GitHub 和 Coding 上</title>
    <link href="http://yoursite.com/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/"/>
    <id>http://yoursite.com/2019/11/07/将-Hexo-个人博客同时部署到-GitHub-和-Coding-上/</id>
    <published>2019-11-07T08:31:14.000Z</published>
    <updated>2019-11-07T09:05:50.671Z</updated>
    
    <content type="html"><![CDATA[<h3 id="将个人博客托管到-Coding-上"><a href="#将个人博客托管到-Coding-上" class="headerlink" title="将个人博客托管到 Coding 上"></a>将个人博客托管到 Coding 上</h3><p> Google 上查了下，发现国内有一个代码托管平台叫 Coding ，也可以将个人的 Hexo 博客托管到平台上，然后有点激动，说时迟那时快，立刻动手尝试将自己的个人博客托管到 Coding 上，中间遇到很多坑，折腾好久，最终成功，特此记录。</p><p>据了解，之前很多人都是把博客托管到国内的 gitcafe上，后来 gitcafe 被 Coding 收购。当然，据我所知国内还有其他代码托管平台，例如有个代码托管平台叫码云，但是码云能不能托管个人博客代码，我就不清楚了，没怎么用码云，基本用的都是 GitHub ，有需要的可以自行了解下。</p><h4 id="1、注册-Coding-帐号"><a href="#1、注册-Coding-帐号" class="headerlink" title="1、注册 Coding 帐号"></a>1、注册 Coding 帐号</h4><p>注册网址：<a href="https://coding.net/" target="_blank" rel="noopener">Coding 官网</a></p><h4 id="2、将本电脑的-SSH-公钥配置到-Coding-上"><a href="#2、将本电脑的-SSH-公钥配置到-Coding-上" class="headerlink" title="2、将本电脑的 SSH 公钥配置到 Coding 上"></a>2、将本电脑的 SSH 公钥配置到 Coding 上</h4><p>（1）打开如下电脑 C 盘用户下的 .ssh 目录， 找到 id_rsa.pub 文件，即公钥文件，复制文件中的所有内容，如下图所示：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/1.png" alt="1"></p><p> （2）在 已经登录的 Coding 网站上，打开个人设置，点击 SSH 公钥菜单下的新增公钥，而后把上面复制的内容全部粘贴到公钥内容框下，公钥名称自定义，没有特别的要求，然后点击添加即可，如下图所示： </p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/2.png" alt="2"></p><p>（3）测试 SSH 公钥是否添加成功：本地打开 Git Bash 窗口，输入一下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@coding.net</span><br></pre></td></tr></table></figure><p>这时候会显示是否继续，选择 yes 继续，如果提示下列内容成功，即 SSH 公钥配置成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello compassblog You&apos;ve connected to Coding.net by SSH successfully!</span><br></pre></td></tr></table></figure><p>当然，compassblog 是我 Coding 帐户的名字，不同的帐户会不一样，如果显示如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host coding.net port 22: Connection refused</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/2.png" alt="2"></p><p>（3）测试 SSH 公钥是否添加成功：本地打开 Git Bash 窗口，输入一下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@coding.net</span><br></pre></td></tr></table></figure><p>这时候会显示是否继续，选择 yes 继续，如果提示下列内容成功，即 SSH 公钥配置成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello compassblog You&apos;ve connected to Coding.net by SSH successfully!</span><br></pre></td></tr></table></figure><p>当然，compassblog 是我 Coding 帐户的名字，不同的帐户会不一样，如果显示如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host coding.net port 22: Connection refused</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/3.png" alt="3"></p><p>说明防火墙完全屏蔽了端口 22 ，这时候不要慌张，直接输入如下命令使用 Coding 提供的 443 端口 SSH 服务即可解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T -p 443 git@git-ssh.coding.net</span><br></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/4.png" alt="4"></p><p>然后在输入验证命令，显示 Coding 帐号与相关信息，即 SSH 公钥配置成功。</p><h3 id="3、新建项目，存放需要托管的博客代码"><a href="#3、新建项目，存放需要托管的博客代码" class="headerlink" title="3、新建项目，存放需要托管的博客代码"></a>3、新建项目，存放需要托管的博客代码</h3><p>（1）在 Coding 的个人主页上点击 + 号，选择项目选项，如下图所示：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/5.png" alt="5"></p><p> （2）选择新建项目后，填写项目信息，项目名称与自己的 Coding 帐户名称项目，项目属性公开私有都可以，个人博客建议是公有，如下图所示： </p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/6.png" alt="6"></p><p> （3）新建项目完毕后，打开项目的 Pages 服务选项，选择部署来源为 master 分支，并打开强制 HTTPS 访问按钮（ https 更加安全），不选择就是 HTTP 访问了，不选择也是可以的，自行决定，点击保存即可，如下图所示： </p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/7.png" alt="7"></p><h4 id="4、配置博客主文件，同时部署-Hexo-博客到-GitHub-和-Coding-上"><a href="#4、配置博客主文件，同时部署-Hexo-博客到-GitHub-和-Coding-上" class="headerlink" title="4、配置博客主文件，同时部署 Hexo 博客到 GitHub 和 Coding 上"></a>4、配置博客主文件，同时部署 Hexo 博客到 GitHub 和 Coding 上</h4><p>（1）打开 Hexo 博客主配置文件 _config.yml，找到 deploy 属性，作如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">      github: git@github.com:compassblog/compassblog.github.io.git</span><br><span class="line">      coding: git@git.coding.net:compassblog/compassblog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>（2）打开 Hexo 主目录下的 source 文件，新建文件 Staticfile ，这个文件是 Coding 静态文件部署的标志，注意文件名字必须为 Staticfile，否则 Coding 上无法完成静态文件的部署，如下图所示：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/8.png" alt="8"></p><h4 id="5、测试-Hexo-博客是否成功部署到-GitHub-和-Coding-上"><a href="#5、测试-Hexo-博客是否成功部署到-GitHub-和-Coding-上" class="headerlink" title="5、测试 Hexo 博客是否成功部署到 GitHub 和 Coding 上"></a>5、测试 Hexo 博客是否成功部署到 GitHub 和 Coding 上</h4><p>经过前面的步骤，配置基本就已经完成，直接在 Hexo 主目录下打开 Git Bash 窗口，输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/9.png" alt="9"></p><p>部署成功，到浏览器地址栏分别输入 GitHub 地址 和 Coding 地址，访问成功：</p><p><a href="https://compassblog.github.io/" target="_blank" rel="noopener">https://compassblog.github.io/</a></p><p><a href="https://compassblog.coding.me/" target="_blank" rel="noopener">https://compassblog.coding.me/</a></p><h4 id="注意compassblog为自己的用户名"><a href="#注意compassblog为自己的用户名" class="headerlink" title="注意compassblog为自己的用户名"></a>注意compassblog为自己的用户名</h4><p>先配置hexo配置文件 在测试是否成功部署</p><p><strong>修改hexo配置文件</strong></p><p>打开配置文件，修改<code>_config.yml</code>文件，修改最下面的deploy属性，设置部署的托管平台。</p><p>修改前</p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/10.png" alt="10"></p><p> 我们现在从一个托管平台变成两个，所以，要进行修改，注意<code>:</code>后面都有空格，修改后如下： </p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/11.png" alt="11"></p><p> 红色边框为新增的内容，链接地址为新建的blog项目的SSH地址 </p><p><img src="/2019/11/07/%E5%B0%86-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-%E5%92%8C-Coding-%E4%B8%8A/12.png" alt="12"></p><p>参考链接：<a href="https://www.cnblogs.com/compassblog/p/8922624.html" target="_blank" rel="noopener">https://www.cnblogs.com/compassblog/p/8922624.html</a></p><p><a href="https://www.jianshu.com/p/9c087e19df3c" target="_blank" rel="noopener">https://www.jianshu.com/p/9c087e19df3c</a></p><h3 id="如何创建静态-Coding-Pages？"><a href="#如何创建静态-Coding-Pages？" class="headerlink" title="如何创建静态 Coding Pages？"></a>如何创建静态 Coding Pages？</h3><p>链接<a href="https://coding.net/help/doc/pages/creating-pages.html#_coding-pages" target="_blank" rel="noopener">https://coding.net/help/doc/pages/creating-pages.html#_coding-pages</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;将个人博客托管到-Coding-上&quot;&gt;&lt;a href=&quot;#将个人博客托管到-Coding-上&quot; class=&quot;headerlink&quot; title=&quot;将个人博客托管到 Coding 上&quot;&gt;&lt;/a&gt;将个人博客托管到 Coding 上&lt;/h3&gt;&lt;p&gt; Google 上查
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="http://yoursite.com/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2019/11/07/hexo博客搭建/</id>
    <published>2019-11-07T07:28:29.000Z</published>
    <updated>2019-11-07T08:30:34.021Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1.环境搭建"></a>1.环境搭建</h3><p> 1、Node.js环境 </p><p> 下载Node.js安装文件：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a> </p><p> 通过以下命令查看是否安装成功： </p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1.png" alt="1"></p><p>2、Git环境</p><p>下载Git 安装文件：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p><p>选在相应系统版本下载安装，默认设置，一路Next即可</p><p>检查一下Git是否安装正确：</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2.png" alt="2"></p><p>基本的环境搭建已经完成。</p><p>3、github账户注册和代码库设置</p><p><a href="https://github.com" target="_blank" rel="noopener">https://github.com</a>  账户注册不解释，略过。</p><p>创建代码库过程如下：</p><p>登录github，点击右上角的“+”，选择New repository</p><p>在Responsitory.name 输入自己的username，一般格式是 username/username.github.io，建议直接填写自己的username，不然会出点小状况。</p><p>然后选择 “Initialize this repository with a README“，最后点击Create repository。</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/3.png" alt="3"></p><p>安装Hexo</p><p>Hexo 官方文档：<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/index.html</a></p><p>在D盘新建Blog/hexo文件夹，(个人习惯)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd hexo</span><br><span class="line">npm install -g hexo-cli  //使用 npm 安装 Hexo</span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>初始化：</p><p>1、在d:/hexo中，新建blog目录，然后执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init    </span><br><span class="line">npm install    </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>浏览器输入<a href="http://localhost:4000,按理来说应该会出现本地访问页面，但是按照此步骤可能不会出现" target="_blank" rel="noopener">http://localhost:4000,按理来说应该会出现本地访问页面，但是按照此步骤可能不会出现</a></p><p>注意：访问本地页面的时候hexo server 不可以按ctrl+c停止服务，否则会报404</p><p>解决：(npm install hexo-deployer-git –save)<br>如果上述方法不行的话，可以试试下面的(可以的话，请忽略。)</p><p>sudo npm install hexo-server</p><p>npm install hexo-server –save</p><p>如果试过还不可以的话，请根据报错，复制到百度自行查找解决方案或者留言评论</p><p>重新部署更新(下面这条命令会经常用到)</p><p>(hexo clean –&gt;hexo generate –&gt;hexo deploy)</p><p><strong>浏览器输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  测试本地成功之后再进行后续步骤。</strong></p><h3 id="2-github配置密钥"><a href="#2-github配置密钥" class="headerlink" title="2.github配置密钥"></a>2.github配置密钥</h3><p>（如已经配置 ，请忽略）</p><p>我们在githob创建项目后，本地使用git 克隆代码 需要在githob配置密钥，才可以</p><p>步骤：</p><p>下载git，进行安装，安装好后。点击桌面，右键，选择》》git  bash</p><p>在弹出的黑框口里面输入</p><p>ssh-keygen -t rsa -C 你的邮箱</p><p>比如 ：ssh-keygen -t rsa -C  hck@.com</p><p>  然后一直回车，就行了</p><p>最后得到如图</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/4.png" alt="4"></p><p>它会生成一个 id _rsa.pub 文件，看上面截图，它有 保存路径的地址说明，按照保存路径找到文件，打开，复制里面的内容</p><p>登录到githob，点击右上角 小三角，出现如图</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/5.png" alt="5"></p><p>点击settings》》sshkey》》new ssh key（右上）</p><p>在页面随便填入一个title，然后key里面，把刚才复制的那个文本信息拷贝进去</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/6.png" alt="6"></p><p> 点击add ssh key ，没有提示错误，就ok了。如果出现问题，可能是你的key没有复制完成导致 </p><p> 3.将Hexo与github page关联起来   </p><p> 配置Git个人信息 </p><p> 因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。账号申请完成后，打开命令行或者Git Bash，输入 </p><p> git config –global user.name “Your Name”，之后回车，再输入<br>   git config –global user.email “<a href="mailto:you@example.com" target="_blank" rel="noopener">you@example.com</a>“<br>  其中Your Name和<a href="mailto:you@example.com" target="_blank" rel="noopener">you@example.com</a>替换成上面注册时的账户名和邮箱。<br>  命令行下输入和Git Bash下输入均可。<br> cd到blog文件夹下，打开_config.yml，修改最后的一行为： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>hexo g //生成静态</p><p>hexo d //部署</p><p>此时，浏览器中打开网址<a href="http://yourname.github.io，能看到和打开http://localhost:4000时一样的页面。" target="_blank" rel="noopener">http://yourname.github.io，能看到和打开http://localhost:4000时一样的页面。</a></p><h3 id="4-如何写博客"><a href="#4-如何写博客" class="headerlink" title="4.如何写博客"></a>4.如何写博客</h3><p>在blog目录中，执行</p><p>hexo new post “First artitle”  </p><p>会生成 D:\hexo\blog\source_posts\First-artitle.md ，用MarDown编辑器打开就可以编辑文章，编辑好以后</p><p>hexo clean   //清除缓存</p><p>hexo g // 生成</p><p>hexo d // 部署</p><h4 id="番外篇"><a href="#番外篇" class="headerlink" title="番外篇"></a>番外篇</h4><p>hexo new page “user”  //新建栏目页</p><p>生成D:\hexo\blog\source\user\index.md</p><h4 id="博客文章中插入图片"><a href="#博客文章中插入图片" class="headerlink" title="博客文章中插入图片"></a>博客文章中插入图片</h4><p>First<br>1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</p><p>2 在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git</p><p>3 等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹</p><p>Second<br>4 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%9B%BE%E7%89%87%E5%90%8D.jpg" alt="你想输入的替代文字"></p><p>注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</p><p>5 最后检查一下，hexo g生成页面后，进入public\2017\02\26\index.html文件中查看相关字段，可以发现，html标签内的语句是<img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/02/26/xxxx/图片名.jpg">，而不是&lt;img src=”xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p><h4 id="防止采坑"><a href="#防止采坑" class="headerlink" title="防止采坑****"></a>防止采坑****</h4><p> 使用 npm install <a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">https://github.com/CodeFalling/hexo-asset-image</a> –save 安装0.0.5版本的hexo-asset-image插件。 使用 npm install hexo-asset-image –save 安装的是1.0.0版本的hexo-asset-image插件。 两者最直接的区别是映射关系不同。 具体详情见<a href="http://www.99708.com.cn/2019/07/26/hexo-本地图片不显示/" target="_blank" rel="noopener">http://www.99708.com.cn/2019/07/26/hexo-本地图片不显示/</a> </p><h3 id="Hexo-NexT-代码块复制功能"><a href="#Hexo-NexT-代码块复制功能" class="headerlink" title="Hexo NexT 代码块复制功能"></a>Hexo NexT 代码块复制功能</h3><p>为了提高博客代码块的用户体验，仅仅代码高亮还不行，最好还能一键复制代码。故此文将讲述Hexo NexT主题博客的代码块复制功能配置。</p><h4 id="下载-clipboard-js"><a href="#下载-clipboard-js" class="headerlink" title="下载 clipboard.js"></a>下载 clipboard.js</h4><p>三方插件 clipboardjs ，相关介绍和兼容性我就不赘述了，去它<a href="https://clipboardjs.com/" target="_blank" rel="noopener">主页</a>或<a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">github</a>上看。</p><p><strong>下载地址：</strong></p><ul><li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js" target="_blank" rel="noopener">clipboard.js</a></li><li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js" target="_blank" rel="noopener">clipboard.min.js</a> <strong>推荐</strong> </li></ul><p>保存文件<code>clipboard.js / clipboard.min.js</code> ，目录如下：<br> <code>.\themes\next\source\js\src</code></p><h4 id="clipboardjs-使用"><a href="#clipboardjs-使用" class="headerlink" title="clipboardjs 使用"></a>clipboardjs 使用</h4><p>也是在<code>.\themes\next\source\js\src</code>目录下，创建<code>clipboard-use.js</code>，文件内容如下：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line">!function (e, t, a) &#123; </span><br><span class="line">  <span class="comment">/* code */</span></span><br><span class="line">  <span class="keyword">var</span> initCopyCode = function()&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = '';</span><br><span class="line">    copyHtml += '&lt;button <span class="class"><span class="keyword">class</span>="<span class="title">btn</span>-<span class="title">copy</span>" <span class="title">data</span>-<span class="title">clipboard</span>-<span class="title">snippet</span>=""&gt;';</span></span><br><span class="line"><span class="class">    <span class="title">copyHtml</span> += '  &lt;<span class="title">i</span> <span class="title">class</span>="<span class="title">fa</span> <span class="title">fa</span>-<span class="title">globe</span>"&gt;&lt;/<span class="title">i</span>&gt;&lt;<span class="title">span</span>&gt;<span class="title">copy</span>&lt;/<span class="title">span</span>&gt;';</span></span><br><span class="line"><span class="class">    <span class="title">copyHtml</span> += '&lt;/<span class="title">button</span>&gt;';</span></span><br><span class="line"><span class="class">    <span class="title">$</span>(".<span class="title">highlight</span> .<span class="title">code</span> <span class="title">pre</span>").<span class="title">before</span>(<span class="title">copyHtml</span>);</span></span><br><span class="line"><span class="class">    <span class="title">new</span> <span class="title">ClipboardJS</span>('.<span class="title">btn</span>-<span class="title">copy</span>', </span>&#123;</span><br><span class="line">        target: function(trigger) &#123;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(window, document);</span><br></pre></td></tr></table></figure><p> 在<code>.\themes\next\source\css\_custom\custom.styl</code>样式文件中添加下面代码： </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码块复制按钮</span></span><br><span class="line">.highlight&#123;</span><br><span class="line">  <span class="comment">//方便copy代码按钮（btn-copy）的定位</span></span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">    background-image: linear-gradient(#fcfcfc,#eee);</span><br><span class="line">    border: 1px solid #d5d5d5;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">    -webkit-user-select: <span class="keyword">none</span>;</span><br><span class="line">    -moz-user-select: <span class="keyword">none</span>;</span><br><span class="line">    -ms-user-select: <span class="keyword">none</span>;</span><br><span class="line">    user-select: <span class="keyword">none</span>;</span><br><span class="line">    -webkit-appearance: <span class="keyword">none</span>;</span><br><span class="line">    font-size: 13px;</span><br><span class="line">    font-weight: <span class="number">700</span>;</span><br><span class="line">    line-height: 20px;</span><br><span class="line">    color: #<span class="number">333</span>;</span><br><span class="line">    -webkit-transition: opacity .3s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    -o-transition: opacity .3s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    transition: opacity .3s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    padding: 2px 6px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    <span class="keyword">right</span>: 5px;</span><br><span class="line">    top: 5px;</span><br><span class="line">    opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy span &#123;</span><br><span class="line">    margin-<span class="keyword">left</span>: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight:hover .btn-copy&#123;</span><br><span class="line">  opacity: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>在<code>.\themes\next\layout\_layout.swig</code>文件中，添加引用（注：在 swig 末尾或 body 结束标签（``）之前添加）：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard.min.js"</span>&gt;&lt;/script&gt;  </span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard-use.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>懂代码的也可以将<code>clipboard.min.js</code>和<code>clipboard-use.js</code>合并为一个文件，再在<code>.\themes\next\layout\_layout.swig</code>文件中使用。当然<code>clipboard.min.js</code>也可以直接用三方cdn的方式引入也行。</p><h3 id="5-如何配置NexT主题"><a href="#5-如何配置NexT主题" class="headerlink" title="5.如何配置NexT主题"></a>5.如何配置NexT主题</h3><p><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/theme-settings.html</a></p><p>网上各种花里胡哨的都有   （附几个链接）</p><p><a href="https://blog.csdn.net/qq_35180973/article/details/84843889" target="_blank" rel="noopener">https://blog.csdn.net/qq_35180973/article/details/84843889</a></p><p><a href="https://blog.csdn.net/qq_35180973/article/details/84849591" target="_blank" rel="noopener">https://blog.csdn.net/qq_35180973/article/details/84849591</a></p><h4 id="注意：多么痛的领悟"><a href="#注意：多么痛的领悟" class="headerlink" title="注意：多么痛的领悟"></a>注意：多么痛的领悟</h4><p>一定要在本地浏览器 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  测试功能正确后，再部署到github和coding上。否则某些配置出错后难以恢复（Next版本造成的错误，主题配置不兼容问题）。</p><p>坑我几天时间</p><p><img src="/2019/11/07/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/7.jpg" alt="7"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-环境搭建&quot;&gt;&lt;a href=&quot;#1-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;1.环境搭建&quot;&gt;&lt;/a&gt;1.环境搭建&lt;/h3&gt;&lt;p&gt; 1、Node.js环境 &lt;/p&gt;
&lt;p&gt; 下载Node.js安装文件：&lt;a href=&quot;https://n
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>git一个项目设置多个远程仓库</title>
    <link href="http://yoursite.com/2019/11/07/git%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E8%AE%BE%E7%BD%AE%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2019/11/07/git一个项目设置多个远程仓库/</id>
    <published>2019-11-07T06:37:37.000Z</published>
    <updated>2019-11-07T06:59:04.552Z</updated>
    
    <content type="html"><![CDATA[<h4 id="需求很简单"><a href="#需求很简单" class="headerlink" title="需求很简单"></a>需求很简单</h4><p>首先我的远程仓库没有其他分支，只有主分支<br>只想在本地修改一份代码后，可以通过终端一键推送到两个远程仓库。</p><h4 id="网上的教程是这样的"><a href="#网上的教程是这样的" class="headerlink" title="网上的教程是这样的"></a>网上的教程是这样的</h4><p>修改.git/config配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">    repositoryformatversion = 0</span><br><span class="line">    filemode = true</span><br><span class="line">    bare = false</span><br><span class="line">    logallrefupdates = true</span><br><span class="line">    ignorecase = true</span><br><span class="line">    precomposeunicode = true</span><br><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">    url = git@github.com:okerivy/xxxx.git</span><br><span class="line">    url = git@git.oschina.net:chatcoin/xxxx.git</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">[branch &quot;master&quot;]</span><br><span class="line">    remote = origin</span><br><span class="line">    merge = refs/heads/master</span><br></pre></td></tr></table></figure><h4 id="出问题"><a href="#出问题" class="headerlink" title="出问题"></a>出问题</h4><p>用了上面的方法，结果推送不上去，一直报错</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">➜  chatcoinCode git:(master) git push  origin --all</span><br><span class="line"></span><br><span class="line">Everything up-to-date</span><br><span class="line">To github.com:okerivy/xxxx.git</span><br><span class="line"> ! [rejected]        master -&gt; master (fetch first)</span><br><span class="line">error: failed to push some refs to <span class="string">'git@github.com:okerivy/xxxx.git'</span></span><br><span class="line">hint: Updates were rejected because the remote contains work that you <span class="keyword">do</span></span><br><span class="line">hint: not have locally. This <span class="keyword">is</span> usually caused <span class="keyword">by</span> another repository pushing</span><br><span class="line">hint: to the same <span class="keyword">ref</span>. You may want to first integrate the remote changes</span><br><span class="line">hint: (e.g., <span class="string">'git pull ...'</span>) before pushing again.</span><br><span class="line">hint: See the <span class="string">'Note about fast-forwards'</span> <span class="keyword">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><h4 id="细节问题"><a href="#细节问题" class="headerlink" title="细节问题"></a>细节问题</h4><p>首先我的代码是 oschina 上的。本地有一份代码。<br>开始的.git/config配置文件是这样的</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = git@git.oschina.<span class="symbol">net:</span>chatcoin/xxxx.git</span><br><span class="line">    fetch = +refs/heads/*<span class="symbol">:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><p>第一步，需要把本地所有的更改先提交到 oschina 上。</p><p>第二步，在 Github 上创建一个空的项目，什么都不要选。复制 ssh 到 .git/config配置文件，并删除 oschina 的 url</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = git@github.<span class="symbol">com:</span>okerivy/xxxx.git</span><br><span class="line">    fetch = +refs/heads/*<span class="symbol">:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><p> 第三步，把本地代码全部<strong>强制</strong>推送到 Github。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><p> 第四部，修改.git/config配置文件，把两个 url 全部添加 </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = git@github.<span class="symbol">com:</span>okerivy/xxxx.git</span><br><span class="line">    url = git@git.oschina.<span class="symbol">net:</span>chatcoin/xxxx.git</span><br><span class="line">    fetch = +refs/heads/*<span class="symbol">:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><p> 第五步，修改项目文件，用终端命令 push 测试下 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">添加项目</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">填写提交信息</span><br><span class="line">git commit -m “提交信息&quot;</span><br><span class="line"></span><br><span class="line">提交到服务器</span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line">获取提交的commit信息</span><br><span class="line">git log</span><br></pre></td></tr></table></figure><p> 两个网站都更新成功 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;需求很简单&quot;&gt;&lt;a href=&quot;#需求很简单&quot; class=&quot;headerlink&quot; title=&quot;需求很简单&quot;&gt;&lt;/a&gt;需求很简单&lt;/h4&gt;&lt;p&gt;首先我的远程仓库没有其他分支，只有主分支&lt;br&gt;只想在本地修改一份代码后，可以通过终端一键推送到两个远程仓库。&lt;/p
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何在Github-Pages搭建自己的页面</title>
    <link href="http://yoursite.com/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2019/11/07/如何在Github-Pages搭建自己的页面/</id>
    <published>2019-11-07T05:38:03.000Z</published>
    <updated>2019-11-07T07:32:22.322Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现 github 改版了，已没有像原来的 Launch automatic page generator 这样的按钮等，所以我对我的文章也进行了修正，对于新版来说，步骤更加简单了。欢迎享用。</p><p>－－－－－－华丽丽的分割线，以下是在原版的基础上的修正版－－－－－－－</p><p>学了前端小半年，如今写了个自己的网页想要去应聘，却发现部署很麻烦，部署到阿里云之类，买域名啊啥的还要收费，说贵也不贵，但我就是傲娇~</p><p>google一下了解到Github有一个Github pages的功能可以搭建博客或者托管网页，而且免费耶，搜了下教程，猛地一看感觉步骤也不是很麻烦，所以就用这个了！</p><p>教程一大堆，却没有几个能看懂的，问题一：90%的都在讲解如何搭建博客，和我想要将自己的网页部署到上面还是有点区别的。问题二：所有的教程都用到了Git，而我只知道Git是一个开源的分布式版本控制系统。完全不知道命令行是什么鬼，只能照猫画虎的小白来说，那些教程只能帮我到桥头，但想要成功过河，还需要深夜里的一包特浓咖啡。</p><p><strong>开始教程之前的准备工作：</strong></p><p><strong>1、需要你自己写的网页文件。</strong></p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/1.png" alt="1"> </p><p><strong>2、注册Github。</strong></p><p><strong>3、下载安装git。下载地址<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></strong></p><p><strong>教程开始：</strong>（以下出现的test指你的网页名或者你想起的一切名字）</p><p><strong>步骤一</strong>：登录到Github上，新建一个repo，命名为test，勾选 initialize this repository with a README，点击create repository。</p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/2.png" alt="2"> </p><p> <strong>步骤二</strong>：打开settings，有一个Github Pages 的设置，点击 source 中的本来的 None ，使其变成 master 分支，也就是作为部署github pages 的分支，然后点击 save。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/3.png" alt="3"> </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/4.png" alt="4"> </p><p> <strong>步骤三</strong>：页面刷新之后，再看 github pages 设置框处，多了一行网址，就是你的 github pages 的网址了。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/5.png" alt="5"> </p><p> 点击这个链接 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/6.png" alt="6"> </p><p>好了，别激动了，真正让一个小白你发疯的阶段开始了，有了自己的网址，但页面显示的是什么鬼？</p><p>至此以上，github上要处理的操作告一段落，该上Git了！</p><p> <strong>步骤四</strong> ：打开此电脑，选择一个盘，比如 f 盘，右键空白处点击 git bash here。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/7.png" alt="7"> </p><p> <strong>步骤五</strong>：输入如下命令，用来在 f 盘创建 test 文件放你的github上的test repository，克隆test repository到 test 文件中。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/8.png" alt="8"> </p><p> 这个时候你的 f 盘，就会多一个 test 文件，打开它， </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/9.png" alt="9"> </p><p> 会看到一个 README.md 的文件，这个文件是从哪来的呢？追溯到gihub上，你会发现 README 文件是来自 master 分支。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/10.jpg" alt="10"> </p><p> <strong>步骤六</strong>： 将自己的网页文件复制粘贴至 f 盘的 test 文件中 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/11.png" alt="11"> </p><p> <strong>步骤八</strong>：执行如下命令 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/12.png" alt="12"> </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/13.png" alt="13"> </p><p>解释一下上面的命令：首先输入  git status  列出当前目录所有还没有被git管理的文件和被git管理且被修改但还未提交(git commit)的文件，也就是所有改动文件，红色字体标出。</p><p>然后输入 git add .  (有个点) 表示添加当前目录下的所有文件和子目录，</p><p>然后 再输入一次 git status 如果看见文件都变绿了 ，那么就代表 它们已经准备好了被提交（git commit）。</p><p><strong>步骤九</strong>：输入如下命令，将你的文件上传至远程 master 分支</p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/14.png" alt="14"> </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/15.png" alt="15"> </p><p> 输入最后一行 git push，按回车，等一会，会有弹出框让你输入你的 github 账号和密码。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/16.png" alt="16"> </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/17.png" alt="17"></p><p>ok之后耐心等待。</p><p>当出现像下图中的语句之后，你已经完成了99%。</p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/18.png" alt="18"></p><p> <strong>最后一步</strong>：打开浏览器输入给你的网址加上你上传的 html 文件名 test.html，然后重重的按下回车。 </p><p><img src="/2019/11/07/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B5%E9%9D%A2/19.png" alt="19"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近发现 github 改版了，已没有像原来的 Launch automatic page generator 这样的按钮等，所以我对我的文章也进行了修正，对于新版来说，步骤更加简单了。欢迎享用。&lt;/p&gt;
&lt;p&gt;－－－－－－华丽丽的分割线，以下是在原版的基础上的修正版－－－
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HDU 2084 动态规划</title>
    <link href="http://yoursite.com/2019/10/27/HDU-2084-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2019/10/27/HDU-2084-动态规划/</id>
    <published>2019-10-27T10:53:50.000Z</published>
    <updated>2019-10-27T10:57:37.190Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>\</em>F题(动态规划)**</strong></p><p>题目链接:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2084" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=2084</a></p><p>这道虽说是DP题，可是这个DP其实非常简单(不要被DP这个名字吓死就行)，既然求最顶端下来的最小值，我们直接从底端开始反推(除非你非要从顶端开始做这题，那就递归吧，又浪费空间又浪费脑子)</p><p>我这个代码是从倒数第二层开始推出来的公式，核心就是这个公式</p><p>我这个代码是从倒数第二层开始推出来的公式，核心就是这个公式</p><p><strong><em>\</em>a[i][j]=max(a[i+1][j],a[i+1][j+1])**</strong></p><p>没错，你弄懂了这个这个代码比杨辉三角都简单(逃)，做不出来可是要谢罪的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">   <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">       <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">       <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">               <span class="built_in">cin</span> &gt;&gt; a[i][j];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(a[i+<span class="number">1</span>][j]&gt;a[i+<span class="number">1</span>][j+<span class="number">1</span>])</span><br><span class="line">                   a[i][j]+=a[i+<span class="number">1</span>][j];</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                   a[i][j]+=a[i+<span class="number">1</span>][j+<span class="number">1</span>];</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; a[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;F题(动态规划)**&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目链接:&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2084&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;
      
    
    </summary>
    
    
      <category term="HDU" scheme="http://yoursite.com/categories/HDU/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>POJ 2387 最短路径</title>
    <link href="http://yoursite.com/2019/10/27/POJ-2387-%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    <id>http://yoursite.com/2019/10/27/POJ-2387-最短路径/</id>
    <published>2019-10-27T10:49:59.000Z</published>
    <updated>2019-10-27T10:51:41.277Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>\</em>E题(最短路径)**</strong></p><p>题目链接:<a href="http://poj.org/problem?id=2387" target="_blank" rel="noopener">http://poj.org/problem?id=2387</a></p><p>读题！读题！读题！</p><p>重要的事情说三遍！</p><p>边数和点数的输入是反的，除了这个致命的坑点之外这就是一道最短路径的裸题</p><p>用SPFA或者迪杰斯特拉都是可以过的，应该不会有大佬头铁去跑Floyd吧(呵呵哒)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line">​</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">   <span class="keyword">int</span> x,y;</span><br><span class="line">   <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; a) <span class="keyword">const</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> x&gt;a.x;</span><br><span class="line">  &#125;</span><br><span class="line">   node(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">       <span class="keyword">this</span>-&gt;x=x;</span><br><span class="line">       <span class="keyword">this</span>-&gt;y=y;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> n,m;</span><br><span class="line">   ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">           d[i]=(<span class="keyword">int</span>)<span class="number">1e9</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">               <span class="built_in">map</span>[i][j]=i==j?<span class="number">0</span>:(<span class="keyword">int</span>)<span class="number">1e9</span>;</span><br><span class="line">       <span class="keyword">int</span> a,b,val;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">           <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;val;</span><br><span class="line">           <span class="built_in">map</span>[a][b]=min(<span class="built_in">map</span>[a][b],val);</span><br><span class="line">           <span class="built_in">map</span>[b][a]=min(<span class="built_in">map</span>[b][a],val);</span><br><span class="line">      &#125;</span><br><span class="line">       priority_queue&lt;node&gt; que;</span><br><span class="line">       d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">       que.push(node(d[<span class="number">1</span>],<span class="number">1</span>));</span><br><span class="line">       <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">           <span class="keyword">int</span> u=que.top().y;que.pop();</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">1</span>;v&lt;=n;v++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(<span class="built_in">map</span>[u][v]!=(<span class="keyword">int</span>)<span class="number">1e9</span>&amp;&amp;v!=u) &#123;</span><br><span class="line">                   <span class="keyword">if</span> (d[v] &gt; d[u] + <span class="built_in">map</span>[u][v]) &#123;</span><br><span class="line">                       d[v] = d[u] + <span class="built_in">map</span>[u][v];</span><br><span class="line">                       que.push(node(d[v], v));</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; d[n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;E题(最短路径)**&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目链接:&lt;a href=&quot;http://poj.org/problem?id=2387&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://poj.org/
      
    
    </summary>
    
    
      <category term="POJ" scheme="http://yoursite.com/categories/POJ/"/>
    
    
      <category term="最短路径" scheme="http://yoursite.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>HDU 1873 优先队列</title>
    <link href="http://yoursite.com/2019/10/27/HDU-1873-%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    <id>http://yoursite.com/2019/10/27/HDU-1873-优先队列/</id>
    <published>2019-10-27T10:40:54.000Z</published>
    <updated>2019-10-27T10:46:42.923Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>\</em>D题(优先队列)**</strong></p><p>题目链接:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1873" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=1873</a></p><p>作为一个阴险的出题人，当然不能出裸的优先队列啦，不能变成打字比赛啊(雾)</p><p>所以这道题的优先队列有两个优先级，一个是看病的优先级，还有一个就是时间的优先级，所以显而易见需要重载运算符了，注意点就是优先队列重载运算符刚好是反一下的，大于就是小于，小于就是大于，如果你熟练掌握了优先队列的话这题过的比上一题快多了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">​</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">   <span class="keyword">int</span> x,y;</span><br><span class="line">   <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (node a,node b)&#123;</span><br><span class="line">       <span class="keyword">return</span> a.x==b.x?a.y&gt;b.y:a.x&lt;b.x;</span><br><span class="line">  &#125;</span><br><span class="line">   node(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">       <span class="keyword">this</span>-&gt;x=x;</span><br><span class="line">       <span class="keyword">this</span>-&gt;y=y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">       <span class="built_in">string</span> s;<span class="keyword">int</span> a,b,c=<span class="number">0</span>;</span><br><span class="line">       priority_queue&lt;node&gt; que[<span class="number">3</span>];</span><br><span class="line">       <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">           <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">           <span class="keyword">if</span> (s == <span class="string">"IN"</span>) &#123;</span><br><span class="line">               c++;</span><br><span class="line">               <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">               que[a - <span class="number">1</span>].push(node(b, c));</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">               <span class="keyword">if</span> (!que[a - <span class="number">1</span>].empty()) &#123;</span><br><span class="line">                   node p = que[a - <span class="number">1</span>].top();</span><br><span class="line">                   que[a - <span class="number">1</span>].pop();</span><br><span class="line">                   <span class="built_in">cout</span> &lt;&lt; p.y &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span></span><br><span class="line">                   <span class="built_in">cout</span> &lt;&lt; <span class="string">"EMPTY"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;D题(优先队列)**&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目链接:&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1873&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;
      
    
    </summary>
    
    
      <category term="HDU" scheme="http://yoursite.com/categories/HDU/"/>
    
    
      <category term="优先队列" scheme="http://yoursite.com/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>type</title>
    <link href="http://yoursite.com/2019/10/27/type/"/>
    <id>http://yoursite.com/2019/10/27/type/</id>
    <published>2019-10-27T03:16:44.000Z</published>
    <updated>2019-10-27T03:39:46.751Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>\</em>C题(字符串)**</strong></p><p>题目链接:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1106" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=1106</a></p><p>这题比A题和B题略难一些，主要就是我自己WA了一发(哈哈哈，尴尬)，没有注意到整个字符串都没有5的情况，还有就是连续都是5的情况，只要及时冷静地发现这两个坑点这个题就很好过</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="built_in">string</span> s;</span><br><span class="line">   <span class="keyword">int</span> a[maxn];</span><br><span class="line">   <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</span><br><span class="line">       ans.clear();</span><br><span class="line">       <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">       <span class="keyword">int</span> sum=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(s[i]==<span class="string">'5'</span>) &#123;</span><br><span class="line">               <span class="keyword">if</span>(flag)</span><br><span class="line">                   ans.push_back(sum);</span><br><span class="line">               sum = <span class="number">0</span>;</span><br><span class="line">               flag=<span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">           <span class="keyword">else</span> &#123;</span><br><span class="line">               flag=<span class="number">1</span>;</span><br><span class="line">               sum *= <span class="number">10</span>;</span><br><span class="line">               sum += s[i] - <span class="string">'0'</span>;</span><br><span class="line">          &#125;</span><br><span class="line">           <span class="keyword">if</span>(i==s.length()<span class="number">-1</span>&amp;&amp;s[i]!=<span class="string">'5'</span>)</span><br><span class="line">               ans.push_back(sum);</span><br><span class="line">      &#125;</span><br><span class="line">       sort(ans.begin(),ans.end());</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">auto</span> it=ans.begin();it!=ans.end();it++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(it!=ans.begin()) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">           <span class="built_in">cout</span> &lt;&lt; *it;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;\&lt;/em&gt;C题(字符串)**&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目链接:&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1106&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      
    
    </summary>
    
    
      <category term="-acm" scheme="http://yoursite.com/categories/acm/"/>
    
    
      <category term="-acm" scheme="http://yoursite.com/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>Orz</title>
    <link href="http://yoursite.com/2019/10/25/Orz/"/>
    <id>http://yoursite.com/2019/10/25/Orz/</id>
    <published>2019-10-25T03:51:35.000Z</published>
    <updated>2019-10-25T03:52:33.647Z</updated>
    
    <content type="html"><![CDATA[<p>（3）测试 SSH 公钥是否添加成功：本地打开 Git Bash 窗口，输入一下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@coding.net</span><br></pre></td></tr></table></figure><p>这时候会显示是否继续，选择 yes 继续，如果提示下列内容成功，即 SSH 公钥配置成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello compassblog You&apos;ve connected to Coding.net by SSH successfully!</span><br></pre></td></tr></table></figure><p>当然，compassblog 是我 Coding 帐户的名字，不同的帐户会不一样，如果显示如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host coding.net port 22: Connection refused</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="https://user-gold-cdn.xitu.io/2018/4/23/162f30ce3fca9a5b?w=821&h=142&f=png&s=11744" alt="img"></p><p>说明防火墙完全屏蔽了端口 22 ，这时候不要慌张，直接输入如下命令使用 Coding 提供的 443 端口 SSH 服务即可解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T -p 443 git@git-ssh.coding.net</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;（3）测试 SSH 公钥是否添加成功：本地打开 Git Bash 窗口，输入一下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
      
    
    </summary>
    
    
    
      <category term="-Orz" scheme="http://yoursite.com/tags/Orz/"/>
    
  </entry>
  
  <entry>
    <title>master</title>
    <link href="http://yoursite.com/2019/10/25/master/"/>
    <id>http://yoursite.com/2019/10/25/master/</id>
    <published>2019-10-25T02:22:31.000Z</published>
    <updated>2019-10-25T02:24:40.705Z</updated>
    
    <content type="html"><![CDATA[<p>To <a href="https://github.com/Koreyoshi-q/Koreyoshi-q.github.io.git" target="_blank" rel="noopener">https://github.com/Koreyoshi-q/Koreyoshi-q.github.io.git</a><br>   2b4428f..527d3e6  HEAD -&gt; master<br>Branch ‘master’ set up to track remote branch ‘master’ from ‘<a href="https://github.com/Koreyoshi-q/Koreyoshi-q.github.io.git&#39;" target="_blank" rel="noopener">https://github.com/Koreyoshi-q/Koreyoshi-q.github.io.git&#39;</a>.<br>On branch master<br>nothing to commit, working tree clean<br>Enumerating objects: 7, done.<br>Counting objects: 100% (7/7), done.<br>Delta compression using up to 4 threads<br>Compressing objects: 100% (3/3), done.<br>Writing objects: 100% (4/4), 357 bytes | 357.00 KiB/s, done.<br>Total 4 (delta 2), reused 0 (delta 0)<br>To <a href="https://git.dev.tencent.com/qf_52hertz/qf_52hertz.git" target="_blank" rel="noopener">https://git.dev.tencent.com/qf_52hertz/qf_52hertz.git</a><br>   2b4428f..527d3e6  HEAD -&gt; master<br>Branch ‘master’ set up to track remote branch ‘master’ from ‘<a href="https://git.dev.tencent.com/qf_52hertz/qf_52hertz.git&#39;" target="_blank" rel="noopener">https://git.dev.tencent.com/qf_52hertz/qf_52hertz.git&#39;</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;To &lt;a href=&quot;https://github.com/Koreyoshi-q/Koreyoshi-q.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Koreyoshi-q/Korey
      
    
    </summary>
    
    
      <category term="Test" scheme="http://yoursite.com/categories/Test/"/>
    
    
      <category term="Testing" scheme="http://yoursite.com/tags/Testing/"/>
    
  </entry>
  
  <entry>
    <title>cotest</title>
    <link href="http://yoursite.com/2019/10/25/cotest/"/>
    <id>http://yoursite.com/2019/10/25/cotest/</id>
    <published>2019-10-25T01:22:41.000Z</published>
    <updated>2019-10-25T01:23:48.132Z</updated>
    
    <content type="html"><![CDATA[<p><strong>git remote add origin <a href="https://github.com/XXX(username)/YYYY(projectname).git" target="_blank" rel="noopener">https://github.com/XXX(username)/YYYY(projectname).git</a></strong></p><p>　　加上一个remote的地址，名叫origin，地址是github上的地址（Create a new repo就会有）<br>　　因为Git是分布式的，所以可以有多个remote.</p><p>　　<strong>git push -u origin master</strong><br>　　将本地内容push到github上的那个地址上去。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;git remote add origin &lt;a href=&quot;https://github.com/XXX(username)/YYYY(projectname).git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git
      
    
    </summary>
    
    
    
      <category term="Testing" scheme="http://yoursite.com/tags/Testing/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/10/24/hello-world/"/>
    <id>http://yoursite.com/2019/10/24/hello-world/</id>
    <published>2019-10-24T08:47:16.495Z</published>
    <updated>2019-10-24T08:47:16.495Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>分类测试文章</title>
    <link href="http://yoursite.com/2019/10/22/%E5%88%86%E7%B1%BB%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2019/10/22/分类测试文章/</id>
    <published>2019-10-22T14:08:33.000Z</published>
    <updated>2019-10-23T01:20:38.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分类测试"><a href="#分类测试" class="headerlink" title="分类测试"></a>分类测试</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"categories"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;分类测试&quot;&gt;&lt;a href=&quot;#分类测试&quot; class=&quot;headerlink&quot; title=&quot;分类测试&quot;&gt;&lt;/a&gt;分类测试&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
      <category term="Testing" scheme="http://yoursite.com/categories/Testing/"/>
    
    
  </entry>
  
  <entry>
    <title>标签测试文章</title>
    <link href="http://yoursite.com/2019/10/22/%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2019/10/22/标签测试文章/</id>
    <published>2019-10-22T14:06:04.000Z</published>
    <updated>2019-10-23T01:18:22.568Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标签测试"><a href="#标签测试" class="headerlink" title="标签测试"></a>标签测试</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"test"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;标签测试&quot;&gt;&lt;a href=&quot;#标签测试&quot; class=&quot;headerlink&quot; title=&quot;标签测试&quot;&gt;&lt;/a&gt;标签测试&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
    
      <category term="Testing" scheme="http://yoursite.com/tags/Testing/"/>
    
      <category term="Another Tag" scheme="http://yoursite.com/tags/Another-Tag/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2019/10/22/test/"/>
    <id>http://yoursite.com/2019/10/22/test/</id>
    <published>2019-10-22T09:32:13.000Z</published>
    <updated>2019-10-22T09:34:07.299Z</updated>
    
    <content type="html"><![CDATA[<h3 id="52hertz"><a href="#52hertz" class="headerlink" title="52hertz"></a><strong>52hertz</strong></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"hello world !"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;52hertz&quot;&gt;&lt;a href=&quot;#52hertz&quot; class=&quot;headerlink&quot; title=&quot;52hertz&quot;&gt;&lt;/a&gt;&lt;strong&gt;52hertz&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
